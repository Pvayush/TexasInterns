{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pvayu\\\\OneDrive\\\\Documents\\\\Code\\\\TexasInterns\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Logo, FormRow } from '../components';\nimport Wrapper from '../assets/wrappers/RegisterPage';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser, registerUser } from '../features/user/userSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n  isMember: true\n};\n\nfunction Register() {\n  _s();\n\n  const [values, setValues] = useState(initialState);\n  const {\n    user,\n    isLoading\n  } = useSelector(store => store.user);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password,\n      isMember\n    } = values;\n\n    if (!email || !password || !isMember && !name) {\n      toast.error('Please fill out all fields');\n      return;\n    }\n\n    if (isMember) {\n      dispatch(loginUser({\n        email: email,\n        password: password\n      }));\n      return;\n    }\n\n    dispatch(registerUser({\n      name,\n      email,\n      password\n    }));\n  };\n\n  const toggleMember = () => {\n    setValues({ ...values,\n      isMember: !values.isMember\n    });\n  }; // Register.js\n\n\n  const handleDemoUser = () => {\n    const demoUser = {\n      name: 'Demo User',\n      email: 'demoUser@test.com',\n      password: 'demopassword'\n    }; // Save demo user to localStorage\n\n    localStorage.setItem('user', JSON.stringify(demoUser)); // Simulate setting user in Redux state and redirecting\n\n    dispatch(loginUser(demoUser)); // Directly set demo user in Redux state\n\n    toast.success('Logged in as Demo User');\n    setTimeout(() => {\n      navigate('/dashboard'); // Redirect to the dashboard after login\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (user) {\n      setTimeout(() => {\n        navigate('/dashboard'); // Redirect to the dashboard after login\n      }, 2000);\n    }\n  }, [user, navigate]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    className: \"full-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: values.isMember ? 'Texas Interns Register' : 'Texas Interns Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), !values.isMember && /*#__PURE__*/_jsxDEV(FormRow, {\n        type: \"text\",\n        name: \"name\",\n        value: values.name,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n        type: \"email\",\n        name: \"email\",\n        value: values.email,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n        type: \"password\",\n        name: \"password\",\n        value: values.password,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-block\",\n        disabled: isLoading,\n        children: isLoading ? 'loading...' : 'submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-block btn-hipster\",\n        disabled: isLoading,\n        onClick: handleDemoUser // Updated for demo user\n        ,\n        children: isLoading ? 'loading...' : 'demo app'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [values.isMember ? 'Not a member yet?' : 'Already a member?', /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleMember,\n          className: \"member-btn\",\n          children: values.isMember ? ' Register' : ' Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"Vx02D0IsiifXeLBiajuXZRB4mLU=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/pvayu/OneDrive/Documents/Code/TexasInterns/frontend/src/pages/Register.js"],"names":["useState","useEffect","Logo","FormRow","Wrapper","toast","useDispatch","useSelector","loginUser","registerUser","useNavigate","initialState","name","email","password","isMember","Register","values","setValues","user","isLoading","store","dispatch","navigate","handleChange","e","target","value","onSubmit","preventDefault","error","toggleMember","handleDemoUser","demoUser","localStorage","setItem","JSON","stringify","success","setTimeout"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Logo, FormRow } from '../components';\nimport Wrapper from '../assets/wrappers/RegisterPage';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser, registerUser } from '../features/user/userSlice';\nimport { useNavigate } from 'react-router-dom';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n  isMember: true,\n};\n\nfunction Register() {\n  const [values, setValues] = useState(initialState);\n  const { user, isLoading } = useSelector((store) => store.user);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setValues({ ...values, [name]: value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { name, email, password, isMember } = values;\n    if (!email || !password || (!isMember && !name)) {\n      toast.error('Please fill out all fields');\n      return;\n    }\n    if (isMember) {\n      dispatch(loginUser({ email: email, password: password }));\n      return;\n    }\n    dispatch(registerUser({ name, email, password }));\n  };\n\n  const toggleMember = () => {\n    setValues({ ...values, isMember: !values.isMember });\n  };\n\n// Register.js\nconst handleDemoUser = () => {\n  const demoUser = {\n    name: 'Demo User',\n    email: 'demoUser@test.com',\n    password: 'demopassword',\n  };\n\n  // Save demo user to localStorage\n  localStorage.setItem('user', JSON.stringify(demoUser));\n\n  // Simulate setting user in Redux state and redirecting\n  dispatch(loginUser(demoUser));  // Directly set demo user in Redux state\n  toast.success('Logged in as Demo User');\n  setTimeout(() => {\n    navigate('/dashboard');  // Redirect to the dashboard after login\n  }, 1000);\n};\n\n\n  useEffect(() => {\n    if (user) {\n      setTimeout(() => {\n        navigate('/dashboard');  // Redirect to the dashboard after login\n      }, 2000);\n    }\n  }, [user, navigate]);\n\n  return (\n    <Wrapper className='full-page'>\n      <form className='form' onSubmit={onSubmit}>\n        <h3>{values.isMember ? 'Texas Interns Register' : 'Texas Interns Login'}</h3>\n        {!values.isMember && (\n          <FormRow\n            type='text'\n            name='name'\n            value={values.name}\n            handleChange={handleChange}\n          />\n        )}\n        <FormRow\n          type='email'\n          name='email'\n          value={values.email}\n          handleChange={handleChange}\n        />\n        <FormRow\n          type='password'\n          name='password'\n          value={values.password}\n          handleChange={handleChange}\n        />\n        <button type='submit' className='btn btn-block' disabled={isLoading}>\n          {isLoading ? 'loading...' : 'submit'}\n        </button>\n        <button\n          type='button'\n          className='btn btn-block btn-hipster'\n          disabled={isLoading}\n          onClick={handleDemoUser}  // Updated for demo user\n        >\n          {isLoading ? 'loading...' : 'demo app'}\n        </button>\n        <p>\n          {values.isMember ? 'Not a member yet?' : 'Already a member?'}\n          <button type='button' onClick={toggleMember} className='member-btn'>\n            {values.isMember ? ' Register' : ' Login'}\n          </button>\n        </p>\n      </form>\n    </Wrapper>\n  );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}