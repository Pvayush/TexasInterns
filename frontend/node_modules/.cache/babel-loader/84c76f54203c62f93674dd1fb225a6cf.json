{"ast":null,"code":"import{FormRow,FormRowSelect}from'../../components';import Wrapper from'../../assets/wrappers/DashboardFormPage';import{useSelector,useDispatch}from'react-redux';import{toast}from'react-toastify';import{handleChange,clearValues,createJob,editJob}from'../../features/job/jobSlice';import{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddJob=function AddJob(){var _useSelector=useSelector(function(store){return store.job;}),isLoading=_useSelector.isLoading,position=_useSelector.position,company=_useSelector.company,jobLocation=_useSelector.jobLocation,jobType=_useSelector.jobType,jobTypeOptions=_useSelector.jobTypeOptions,status=_useSelector.status,statusOptions=_useSelector.statusOptions,isEditing=_useSelector.isEditing,editJobId=_useSelector.editJobId;var _useSelector2=useSelector(function(store){return store.user;}),user=_useSelector2.user;var dispatch=useDispatch();var handleSubmit=function handleSubmit(e){e.preventDefault();if(!position||!company||!jobLocation){toast.error('Please fill out all fields');return;}if(isEditing){dispatch(editJob({jobId:editJobId,job:{position:position,company:company,jobLocation:jobLocation,jobType:jobType,status:status}}));return;}dispatch(createJob({position:position,company:company,jobLocation:jobLocation,jobType:jobType,status:status}));};var handleJobInput=function handleJobInput(e){var name=e.target.name;var value=e.target.value;dispatch(handleChange({name:name,value:value}));};useEffect(function(){if(!isEditing){dispatch(handleChange({name:'jobLocation',value:user.location}));}},[]);return/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:isEditing?'edit internship':'add internship'}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-center\",children:[/*#__PURE__*/_jsx(FormRow,{type:\"text\",name:\"position\",value:position,handleChange:handleJobInput}),/*#__PURE__*/_jsx(FormRow,{type:\"text\",name:\"company\",value:company,handleChange:handleJobInput}),/*#__PURE__*/_jsx(FormRow,{type:\"text\",name:\"jobLocation\",labelText:\"internship location\",value:jobLocation,handleChange:handleJobInput}),/*#__PURE__*/_jsx(FormRowSelect,{name:\"status\",value:status,handleChange:handleJobInput,list:statusOptions}),/*#__PURE__*/_jsx(FormRowSelect,{name:\"jobType\",labelText:\"job type\",value:jobType,handleChange:handleJobInput,list:jobTypeOptions}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-container\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-block clear-btn\",onClick:function onClick(){return dispatch(clearValues());},children:\"clear\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-block submit-btn\",onClick:handleSubmit,disabled:isLoading,children:\"submit\"})]})]})]})});};export default AddJob;","map":{"version":3,"sources":["C:/Users/pvayu/OneDrive/Documents/Code/TexasInterns/frontend/src/pages/dashboard/AddJob.js"],"names":["FormRow","FormRowSelect","Wrapper","useSelector","useDispatch","toast","handleChange","clearValues","createJob","editJob","useEffect","AddJob","store","job","isLoading","position","company","jobLocation","jobType","jobTypeOptions","status","statusOptions","isEditing","editJobId","user","dispatch","handleSubmit","e","preventDefault","error","jobId","handleJobInput","name","target","value","location"],"mappings":"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","sourcesContent":["import { FormRow, FormRowSelect } from '../../components';\nimport Wrapper from '../../assets/wrappers/DashboardFormPage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n  handleChange,\n  clearValues,\n  createJob,\n  editJob,\n} from '../../features/job/jobSlice';\nimport { useEffect } from 'react';\n\nconst AddJob = () => {\n  const {\n    isLoading,\n    position,\n    company,\n    jobLocation,\n    jobType,\n    jobTypeOptions,\n    status,\n    statusOptions,\n    isEditing,\n    editJobId,\n  } = useSelector((store) => store.job);\n  const { user } = useSelector((store) => store.user);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!position || !company || !jobLocation) {\n      toast.error('Please fill out all fields');\n      return;\n    }\n    if (isEditing) {\n      dispatch(\n        editJob({\n          jobId: editJobId,\n          job: { position, company, jobLocation, jobType, status },\n        })\n      );\n      return;\n    }\n    dispatch(createJob({ position, company, jobLocation, jobType, status }));\n  };\n\n  const handleJobInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    dispatch(handleChange({ name, value }));\n  };\n\n  useEffect(() => {\n    if (!isEditing) {\n      dispatch(\n        handleChange({\n          name: 'jobLocation',\n          value: user.location,\n        })\n      );\n    }\n  }, []);\n\n  return (\n    <Wrapper>\n      <form className='form'>\n        <h3>{isEditing ? 'edit internship' : 'add internship'}</h3>\n        <div className='form-center'>\n          <FormRow\n            type='text'\n            name='position'\n            value={position}\n            handleChange={handleJobInput}\n          />\n          <FormRow\n            type='text'\n            name='company'\n            value={company}\n            handleChange={handleJobInput}\n          />\n          <FormRow\n            type='text'\n            name='jobLocation'\n            labelText='internship location'\n            value={jobLocation}\n            handleChange={handleJobInput}\n          />\n          <FormRowSelect\n            name='status'\n            value={status}\n            handleChange={handleJobInput}\n            list={statusOptions}\n          />\n          <FormRowSelect\n            name='jobType'\n            labelText='job type'\n            value={jobType}\n            handleChange={handleJobInput}\n            list={jobTypeOptions}\n          />\n          <div className='btn-container'>\n            <button\n              type='button'\n              className='btn btn-block clear-btn'\n              onClick={() => dispatch(clearValues())}\n            >\n              clear\n            </button>\n            <button\n              type='submit'\n              className='btn btn-block submit-btn'\n              onClick={handleSubmit}\n              disabled={isLoading}\n            >\n              submit\n            </button>\n          </div>\n        </div>\n      </form>\n    </Wrapper>\n  );\n};\n\nexport default AddJob;\n"]},"metadata":{},"sourceType":"module"}