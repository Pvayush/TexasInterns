{"ast":null,"code":"import _slicedToArray from\"C:/Users/pvayu/OneDrive/Documents/Code/TexasInterns/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Wrapper from'../assets/wrappers/Navbar';import{FaAlignLeft,FaUserCircle,FaCaretDown}from'react-icons/fa';import Logo from'./Logo';import{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{toggleSidebar,clearStore}from'../features/user/userSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Navbar=function Navbar(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showLogout=_useState2[0],setShowLogout=_useState2[1];var _useSelector=useSelector(function(store){return store.user;}),user=_useSelector.user;var dispatch=useDispatch();var toggle=function toggle(){dispatch(toggleSidebar());};return/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"nav-center\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"toggle-btn\",onClick:toggle,children:/*#__PURE__*/_jsx(FaAlignLeft,{})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Logo,{}),/*#__PURE__*/_jsx(\"h3\",{className:\"logo-text\",children:\"intern dashboard\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-container\",children:[/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn\",onClick:function onClick(){return setShowLogout(!showLogout);},children:[/*#__PURE__*/_jsx(FaUserCircle,{}),user===null||user===void 0?void 0:user.name,/*#__PURE__*/_jsx(FaCaretDown,{})]}),/*#__PURE__*/_jsx(\"div\",{className:showLogout?'dropdown show-dropdown':'dropdown',children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"dropdown-btn\",onClick:function onClick(){return dispatch(clearStore('Logging out...'));},children:\"logout\"})})]})]})});};export default Navbar;","map":{"version":3,"sources":["C:/Users/pvayu/OneDrive/Documents/Code/TexasInterns/frontend/src/components/Navbar.js"],"names":["Wrapper","FaAlignLeft","FaUserCircle","FaCaretDown","Logo","useState","useDispatch","useSelector","toggleSidebar","clearStore","Navbar","showLogout","setShowLogout","store","user","dispatch","toggle","name"],"mappings":"yIAAA,MAAOA,CAAAA,OAAP,KAAoB,2BAApB,CACA,OAASC,WAAT,CAAsBC,YAAtB,CAAoCC,WAApC,KAAuD,gBAAvD,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,aAAT,CAAwBC,UAAxB,KAA0C,4BAA1C,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,cAAoCL,QAAQ,CAAC,KAAD,CAA5C,wCAAOM,UAAP,eAAmBC,aAAnB,eACA,iBAAiBL,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAA5B,CAAQA,IAAR,cAAQA,IAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,GAAMU,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBD,QAAQ,CAACP,aAAa,EAAd,CAAR,CACD,CAFD,CAIA,mBACE,KAAC,OAAD,wBACE,aAAK,SAAS,CAAC,YAAf,wBACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,YAAhC,CAA6C,OAAO,CAAEQ,MAAtD,uBACE,KAAC,WAAD,IADF,EADF,cAIE,oCACE,KAAC,IAAD,IADF,cAEE,WAAI,SAAS,CAAC,WAAd,8BAFF,GAJF,cAQE,aAAK,SAAS,CAAC,eAAf,wBACE,gBACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,KAFZ,CAGE,OAAO,CAAE,yBAAMJ,CAAAA,aAAa,CAAC,CAACD,UAAF,CAAnB,EAHX,wBAKE,KAAC,YAAD,IALF,CAMGG,IANH,SAMGA,IANH,iBAMGA,IAAI,CAAEG,IANT,cAOE,KAAC,WAAD,IAPF,GADF,cAUE,YAAK,SAAS,CAAEN,UAAU,CAAG,wBAAH,CAA8B,UAAxD,uBACE,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,cAFZ,CAGE,OAAO,CAAE,yBAAMI,CAAAA,QAAQ,CAACN,UAAU,CAAC,gBAAD,CAAX,CAAd,EAHX,oBADF,EAVF,GARF,GADF,EADF,CAiCD,CA1CD,CA2CA,cAAeC,CAAAA,MAAf","sourcesContent":["import Wrapper from '../assets/wrappers/Navbar';\nimport { FaAlignLeft, FaUserCircle, FaCaretDown } from 'react-icons/fa';\nimport Logo from './Logo';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleSidebar, clearStore } from '../features/user/userSlice';\n\nconst Navbar = () => {\n  const [showLogout, setShowLogout] = useState(false);\n  const { user } = useSelector((store) => store.user);\n  const dispatch = useDispatch();\n\n  const toggle = () => {\n    dispatch(toggleSidebar());\n  };\n\n  return (\n    <Wrapper>\n      <div className='nav-center'>\n        <button type='button' className='toggle-btn' onClick={toggle}>\n          <FaAlignLeft />\n        </button>\n        <div>\n          <Logo />\n          <h3 className='logo-text'>intern dashboard</h3>\n        </div>\n        <div className='btn-container'>\n          <button\n            type='button'\n            className='btn'\n            onClick={() => setShowLogout(!showLogout)}\n          >\n            <FaUserCircle />\n            {user?.name}\n            <FaCaretDown />\n          </button>\n          <div className={showLogout ? 'dropdown show-dropdown' : 'dropdown'}>\n            <button\n              type='button'\n              className='dropdown-btn'\n              onClick={() => dispatch(clearStore('Logging out...'))}\n            >\n              logout\n            </button>\n          </div>\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}