{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { addUserToLocalStorage, getUserFromLocalStorage, removeUserFromLocalStorage } from '../../utils/localStorage';\nimport { loginUserThunk, registerUserThunk, updateUserThunk, clearStoreThunk } from './userThunk';\nconst initialState = {\n  isLoading: false,\n  isSidebarOpen: false,\n  user: getUserFromLocalStorage()\n};\nexport const registerUser = createAsyncThunk('user/registerUser', async (user, thunkAPI) => {\n  return registerUserThunk('/auth/register', user, thunkAPI);\n});\nexport const loginUser = createAsyncThunk('user/loginUser', async (user, thunkAPI) => {\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_URL}/login`, user);\n    const {\n      token\n    } = response.data; // Save the token\n\n    localStorage.setItem('token', token);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const updateUser = createAsyncThunk('user/updateUser', async (user, thunkAPI) => {\n  return updateUserThunk('/auth/updateUser', user, thunkAPI);\n});\nexport const clearStore = createAsyncThunk('user/clearStore', clearStoreThunk);\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    toggleSidebar: state => {\n      state.isSidebarOpen = !state.isSidebarOpen;\n    },\n    logoutUser: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.user = null;\n      state.isSidebarOpen = false;\n      removeUserFromLocalStorage();\n\n      if (payload) {\n        toast.success(payload);\n      }\n    },\n    setDemoUser: state => {\n      const demoUser = {\n        name: 'Demo User',\n        email: 'demo@user.com'\n      }; // Simplified Demo User\n\n      state.user = demoUser;\n      addUserToLocalStorage(demoUser);\n      toast.success('Logged in as Demo User');\n    }\n  },\n  extraReducers: {\n    [registerUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [registerUser.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const {\n        user\n      } = payload;\n      state.isLoading = false;\n      state.user = user;\n      addUserToLocalStorage(user);\n      toast.success(`Hello There ${user.name}`);\n    },\n    [registerUser.rejected]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [loginUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [loginUser.fulfilled]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      const {\n        user\n      } = payload;\n      state.isLoading = false;\n      state.user = user;\n      addUserToLocalStorage(user);\n      toast.success(`Welcome Back ${user.name}`);\n    },\n    [loginUser.rejected]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [updateUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [updateUser.fulfilled]: (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      const {\n        user\n      } = payload;\n      state.isLoading = false;\n      state.user = user;\n      addUserToLocalStorage(user);\n      toast.success('User Updated!');\n    },\n    [updateUser.rejected]: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [clearStore.rejected]: () => {\n      toast.error('There was an error..');\n    }\n  }\n});\nexport const {\n  toggleSidebar,\n  logoutUser,\n  setDemoUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/pvayu/OneDrive/Documents/Code/TexasInterns/frontend/src/features/user/userSlice.js"],"names":["createSlice","createAsyncThunk","toast","addUserToLocalStorage","getUserFromLocalStorage","removeUserFromLocalStorage","loginUserThunk","registerUserThunk","updateUserThunk","clearStoreThunk","initialState","isLoading","isSidebarOpen","user","registerUser","thunkAPI","loginUser","response","axios","post","process","env","REACT_APP_API_URL","token","data","localStorage","setItem","error","rejectWithValue","updateUser","clearStore","userSlice","name","reducers","toggleSidebar","state","logoutUser","payload","success","setDemoUser","demoUser","email","extraReducers","pending","fulfilled","rejected","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SACEC,qBADF,EAEEC,uBAFF,EAGEC,0BAHF,QAIO,0BAJP;AAKA,SACEC,cADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,eAJF,QAKO,aALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,aAAa,EAAE,KAFI;AAGnBC,EAAAA,IAAI,EAAET,uBAAuB;AAHV,CAArB;AAMA,OAAO,MAAMU,YAAY,GAAGb,gBAAgB,CAC1C,mBAD0C,EAE1C,OAAOY,IAAP,EAAaE,QAAb,KAA0B;AACxB,SAAOR,iBAAiB,CAAC,gBAAD,EAAmBM,IAAnB,EAAyBE,QAAzB,CAAxB;AACD,CAJyC,CAArC;AAOP,OAAO,MAAMC,SAAS,GAAGf,gBAAgB,CACvC,gBADuC,EAEvC,OAAOY,IAAP,EAAaE,QAAb,KAA0B;AACxB,MAAI;AACF,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,QAA5C,EAAqDT,IAArD,CAAvB;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAYN,QAAQ,CAACO,IAA3B,CAFE,CAGF;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACA,WAAON,QAAQ,CAACO,IAAhB;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACd,WAAOZ,QAAQ,CAACa,eAAT,CAAyBD,KAAK,CAACV,QAAN,CAAeO,IAAxC,CAAP;AACD;AACF,CAZsC,CAAlC;AAeP,OAAO,MAAMK,UAAU,GAAG5B,gBAAgB,CACxC,iBADwC,EAExC,OAAOY,IAAP,EAAaE,QAAb,KAA0B;AACxB,SAAOP,eAAe,CAAC,kBAAD,EAAqBK,IAArB,EAA2BE,QAA3B,CAAtB;AACD,CAJuC,CAAnC;AAOP,OAAO,MAAMe,UAAU,GAAG7B,gBAAgB,CAAC,iBAAD,EAAoBQ,eAApB,CAAnC;AAEP,MAAMsB,SAAS,GAAG/B,WAAW,CAAC;AAC5BgC,EAAAA,IAAI,EAAE,MADsB;AAE5BtB,EAAAA,YAF4B;AAG5BuB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAGC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACvB,aAAN,GAAsB,CAACuB,KAAK,CAACvB,aAA7B;AACD,KAHO;AAIRwB,IAAAA,UAAU,EAAE,CAACD,KAAD,WAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AAClCF,MAAAA,KAAK,CAACtB,IAAN,GAAa,IAAb;AACAsB,MAAAA,KAAK,CAACvB,aAAN,GAAsB,KAAtB;AACAP,MAAAA,0BAA0B;;AAC1B,UAAIgC,OAAJ,EAAa;AACXnC,QAAAA,KAAK,CAACoC,OAAN,CAAcD,OAAd;AACD;AACF,KAXO;AAYRE,IAAAA,WAAW,EAAGJ,KAAD,IAAW;AACtB,YAAMK,QAAQ,GAAG;AAAER,QAAAA,IAAI,EAAE,WAAR;AAAqBS,QAAAA,KAAK,EAAE;AAA5B,OAAjB,CADsB,CAC2C;;AACjEN,MAAAA,KAAK,CAACtB,IAAN,GAAa2B,QAAb;AACArC,MAAAA,qBAAqB,CAACqC,QAAD,CAArB;AACAtC,MAAAA,KAAK,CAACoC,OAAN,CAAc,wBAAd;AACD;AAjBO,GAHkB;AAsB5BI,EAAAA,aAAa,EAAE;AACb,KAAC5B,YAAY,CAAC6B,OAAd,GAAyBR,KAAD,IAAW;AACjCA,MAAAA,KAAK,CAACxB,SAAN,GAAkB,IAAlB;AACD,KAHY;AAIb,KAACG,YAAY,CAAC8B,SAAd,GAA0B,CAACT,KAAD,YAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AAChD,YAAM;AAAExB,QAAAA;AAAF,UAAWwB,OAAjB;AACAF,MAAAA,KAAK,CAACxB,SAAN,GAAkB,KAAlB;AACAwB,MAAAA,KAAK,CAACtB,IAAN,GAAaA,IAAb;AACAV,MAAAA,qBAAqB,CAACU,IAAD,CAArB;AACAX,MAAAA,KAAK,CAACoC,OAAN,CAAe,eAAczB,IAAI,CAACmB,IAAK,EAAvC;AACD,KAVY;AAWb,KAAClB,YAAY,CAAC+B,QAAd,GAAyB,CAACV,KAAD,YAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AAC/CF,MAAAA,KAAK,CAACxB,SAAN,GAAkB,KAAlB;AACAT,MAAAA,KAAK,CAACyB,KAAN,CAAYU,OAAZ;AACD,KAdY;AAeb,KAACrB,SAAS,CAAC2B,OAAX,GAAsBR,KAAD,IAAW;AAC9BA,MAAAA,KAAK,CAACxB,SAAN,GAAkB,IAAlB;AACD,KAjBY;AAkBb,KAACK,SAAS,CAAC4B,SAAX,GAAuB,CAACT,KAAD,YAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AAC7C,YAAM;AAAExB,QAAAA;AAAF,UAAWwB,OAAjB;AACAF,MAAAA,KAAK,CAACxB,SAAN,GAAkB,KAAlB;AACAwB,MAAAA,KAAK,CAACtB,IAAN,GAAaA,IAAb;AACAV,MAAAA,qBAAqB,CAACU,IAAD,CAArB;AACAX,MAAAA,KAAK,CAACoC,OAAN,CAAe,gBAAezB,IAAI,CAACmB,IAAK,EAAxC;AACD,KAxBY;AAyBb,KAAChB,SAAS,CAAC6B,QAAX,GAAsB,CAACV,KAAD,YAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AAC5CF,MAAAA,KAAK,CAACxB,SAAN,GAAkB,KAAlB;AACAT,MAAAA,KAAK,CAACyB,KAAN,CAAYU,OAAZ;AACD,KA5BY;AA6Bb,KAACR,UAAU,CAACc,OAAZ,GAAuBR,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACxB,SAAN,GAAkB,IAAlB;AACD,KA/BY;AAgCb,KAACkB,UAAU,CAACe,SAAZ,GAAwB,CAACT,KAAD,YAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AAC9C,YAAM;AAAExB,QAAAA;AAAF,UAAWwB,OAAjB;AACAF,MAAAA,KAAK,CAACxB,SAAN,GAAkB,KAAlB;AACAwB,MAAAA,KAAK,CAACtB,IAAN,GAAaA,IAAb;AACAV,MAAAA,qBAAqB,CAACU,IAAD,CAArB;AACAX,MAAAA,KAAK,CAACoC,OAAN,CAAc,eAAd;AACD,KAtCY;AAuCb,KAACT,UAAU,CAACgB,QAAZ,GAAuB,CAACV,KAAD,YAAwB;AAAA,UAAhB;AAAEE,QAAAA;AAAF,OAAgB;AAC7CF,MAAAA,KAAK,CAACxB,SAAN,GAAkB,KAAlB;AACAT,MAAAA,KAAK,CAACyB,KAAN,CAAYU,OAAZ;AACD,KA1CY;AA2Cb,KAACP,UAAU,CAACe,QAAZ,GAAuB,MAAM;AAC3B3C,MAAAA,KAAK,CAACyB,KAAN,CAAY,sBAAZ;AACD;AA7CY;AAtBa,CAAD,CAA7B;AAuEA,OAAO,MAAM;AAAEO,EAAAA,aAAF;AAAiBE,EAAAA,UAAjB;AAA6BG,EAAAA;AAA7B,IAA6CR,SAAS,CAACe,OAA7D;AACP,eAAef,SAAS,CAACgB,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport {\n  addUserToLocalStorage,\n  getUserFromLocalStorage,\n  removeUserFromLocalStorage,\n} from '../../utils/localStorage';\nimport {\n  loginUserThunk,\n  registerUserThunk,\n  updateUserThunk,\n  clearStoreThunk,\n} from './userThunk';\n\nconst initialState = {\n  isLoading: false,\n  isSidebarOpen: false,\n  user: getUserFromLocalStorage(),\n};\n\nexport const registerUser = createAsyncThunk(\n  'user/registerUser',\n  async (user, thunkAPI) => {\n    return registerUserThunk('/auth/register', user, thunkAPI);\n  }\n);\n\nexport const loginUser = createAsyncThunk(\n  'user/loginUser',\n  async (user, thunkAPI) => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/login`, user);\n      const { token } = response.data;\n      // Save the token\n      localStorage.setItem('token', token);\n      return response.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const updateUser = createAsyncThunk(\n  'user/updateUser',\n  async (user, thunkAPI) => {\n    return updateUserThunk('/auth/updateUser', user, thunkAPI);\n  }\n);\n\nexport const clearStore = createAsyncThunk('user/clearStore', clearStoreThunk);\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    toggleSidebar: (state) => {\n      state.isSidebarOpen = !state.isSidebarOpen;\n    },\n    logoutUser: (state, { payload }) => {\n      state.user = null;\n      state.isSidebarOpen = false;\n      removeUserFromLocalStorage();\n      if (payload) {\n        toast.success(payload);\n      }\n    },\n    setDemoUser: (state) => {\n      const demoUser = { name: 'Demo User', email: 'demo@user.com' };  // Simplified Demo User\n      state.user = demoUser;\n      addUserToLocalStorage(demoUser);\n      toast.success('Logged in as Demo User');\n    },\n  },\n  extraReducers: {\n    [registerUser.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [registerUser.fulfilled]: (state, { payload }) => {\n      const { user } = payload;\n      state.isLoading = false;\n      state.user = user;\n      addUserToLocalStorage(user);\n      toast.success(`Hello There ${user.name}`);\n    },\n    [registerUser.rejected]: (state, { payload }) => {\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [loginUser.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [loginUser.fulfilled]: (state, { payload }) => {\n      const { user } = payload;\n      state.isLoading = false;\n      state.user = user;\n      addUserToLocalStorage(user);\n      toast.success(`Welcome Back ${user.name}`);\n    },\n    [loginUser.rejected]: (state, { payload }) => {\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [updateUser.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [updateUser.fulfilled]: (state, { payload }) => {\n      const { user } = payload;\n      state.isLoading = false;\n      state.user = user;\n      addUserToLocalStorage(user);\n      toast.success('User Updated!');\n    },\n    [updateUser.rejected]: (state, { payload }) => {\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [clearStore.rejected]: () => {\n      toast.error('There was an error..');\n    },\n  },\n});\n\nexport const { toggleSidebar, logoutUser, setDemoUser } = userSlice.actions;\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}