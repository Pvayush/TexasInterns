{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pvayu\\\\OneDrive\\\\Documents\\\\Code\\\\TexasInterns\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\AddJob.js\",\n    _s = $RefreshSig$();\n\nimport { FormRow, FormRowSelect } from '../../components';\nimport Wrapper from '../../assets/wrappers/DashboardFormPage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { handleChange, clearValues, createJob, editJob } from '../../features/job/jobSlice';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddJob = () => {\n  _s();\n\n  const {\n    isLoading,\n    position,\n    company,\n    jobLocation,\n    jobType,\n    jobTypeOptions,\n    status,\n    statusOptions,\n    isEditing,\n    editJobId\n  } = useSelector(store => store.job);\n  const {\n    user\n  } = useSelector(store => store.user);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!position || !company || !jobLocation) {\n      toast.error('Please fill out all fields');\n      return;\n    }\n\n    if (isEditing) {\n      dispatch(editJob({\n        jobId: editJobId,\n        job: {\n          position,\n          company,\n          jobLocation,\n          jobType,\n          status\n        }\n      }));\n      return;\n    }\n\n    dispatch(createJob({\n      position,\n      company,\n      jobLocation,\n      jobType,\n      status\n    }));\n  };\n\n  const handleJobInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    dispatch(handleChange({\n      name,\n      value\n    }));\n  };\n\n  useEffect(() => {\n    if (!isEditing) {\n      dispatch(handleChange({\n        name: 'jobLocation',\n        value: user.location || ''\n      }));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: isEditing ? 'edit internship' : 'add internship'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-center\",\n        children: [/*#__PURE__*/_jsxDEV(FormRow, {\n          type: \"text\",\n          name: \"position\",\n          value: position,\n          handleChange: handleJobInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n          type: \"text\",\n          name: \"company\",\n          value: company,\n          handleChange: handleJobInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormRow, {\n          type: \"text\",\n          name: \"jobLocation\",\n          labelText: \"internship location\",\n          value: jobLocation,\n          handleChange: handleJobInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormRowSelect, {\n          name: \"status\",\n          value: status,\n          handleChange: handleJobInput,\n          list: statusOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormRowSelect, {\n          name: \"jobType\",\n          labelText: \"job type\",\n          value: jobType,\n          handleChange: handleJobInput,\n          list: jobTypeOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-block clear-btn\",\n            onClick: () => dispatch(clearValues()),\n            children: \"clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-block submit-btn\",\n            onClick: handleSubmit,\n            disabled: isLoading,\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddJob, \"hpfxtAo1xftaYCOQNg0NbEaz3mU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = AddJob;\nexport default AddJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"sources":["C:/Users/pvayu/OneDrive/Documents/Code/TexasInterns/frontend/src/pages/dashboard/AddJob.js"],"names":["FormRow","FormRowSelect","Wrapper","useSelector","useDispatch","toast","handleChange","clearValues","createJob","editJob","useEffect","AddJob","isLoading","position","company","jobLocation","jobType","jobTypeOptions","status","statusOptions","isEditing","editJobId","store","job","user","dispatch","handleSubmit","e","preventDefault","error","jobId","handleJobInput","name","target","value","location"],"mappings":"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","sourcesContent":["import { FormRow, FormRowSelect } from '../../components';\nimport Wrapper from '../../assets/wrappers/DashboardFormPage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n  handleChange,\n  clearValues,\n  createJob,\n  editJob,\n} from '../../features/job/jobSlice';\nimport { useEffect } from 'react';\n\nconst AddJob = () => {\n  const {\n    isLoading,\n    position,\n    company,\n    jobLocation,\n    jobType,\n    jobTypeOptions,\n    status,\n    statusOptions,\n    isEditing,\n    editJobId,\n  } = useSelector((store) => store.job);\n  const { user } = useSelector((store) => store.user);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!position || !company || !jobLocation) {\n      toast.error('Please fill out all fields');\n      return;\n    }\n    if (isEditing) {\n      dispatch(\n        editJob({\n          jobId: editJobId,\n          job: { position, company, jobLocation, jobType, status },\n        })\n      );\n      return;\n    }\n    dispatch(createJob({ position, company, jobLocation, jobType, status }));\n  };\n\n  const handleJobInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    dispatch(handleChange({ name, value }));\n  };\n\n  useEffect(() => {\n    if (!isEditing) {\n      dispatch(\n        handleChange({\n          name: 'jobLocation',\n          value: user.location|| '',\n        })\n      );\n    }\n  }, []);\n\n  return (\n    <Wrapper>\n      <form className='form'>\n        <h3>{isEditing ? 'edit internship' : 'add internship'}</h3>\n        <div className='form-center'>\n          <FormRow\n            type='text'\n            name='position'\n            value={position}\n            handleChange={handleJobInput}\n          />\n          <FormRow\n            type='text'\n            name='company'\n            value={company}\n            handleChange={handleJobInput}\n          />\n          <FormRow\n            type='text'\n            name='jobLocation'\n            labelText='internship location'\n            value={jobLocation}\n            handleChange={handleJobInput}\n          />\n          <FormRowSelect\n            name='status'\n            value={status}\n            handleChange={handleJobInput}\n            list={statusOptions}\n          />\n          <FormRowSelect\n            name='jobType'\n            labelText='job type'\n            value={jobType}\n            handleChange={handleJobInput}\n            list={jobTypeOptions}\n          />\n          <div className='btn-container'>\n            <button\n              type='button'\n              className='btn btn-block clear-btn'\n              onClick={() => dispatch(clearValues())}\n            >\n              clear\n            </button>\n            <button\n              type='submit'\n              className='btn btn-block submit-btn'\n              onClick={handleSubmit}\n              disabled={isLoading}\n            >\n              submit\n            </button>\n          </div>\n        </div>\n      </form>\n    </Wrapper>\n  );\n};\n\nexport default AddJob;\n"]},"metadata":{},"sourceType":"module"}