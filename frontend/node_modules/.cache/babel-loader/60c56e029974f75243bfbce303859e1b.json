{"ast":null,"code":"import axios from 'axios';\nimport { clearStore } from '../features/user/userSlice';\nimport { getUserFromLocalStorage } from './localStorage';\nconst API_URL = process.env.REACT_APP_API_URL;\nconst customFetch = axios.create({\n  baseURL: API_URL\n});\ncustomFetch.interceptors.request.use(config => {\n  const user = getUserFromLocalStorage();\n\n  if (user) {\n    config.headers.common['Authorization'] = `Bearer ${user.token}`;\n  }\n\n  return config;\n});\nexport const checkForUnauthorizedResponse = (error, thunkAPI) => {\n  if (error.response.status === 401) {\n    thunkAPI.dispatch(clearStore());\n    return thunkAPI.rejectWithValue('Unauthorized! Logging Out...');\n  }\n\n  return thunkAPI.rejectWithValue(error.response.data.msg);\n};\nexport default customFetch;","map":{"version":3,"sources":["C:/Users/pvayu/OneDrive/Documents/Code/TexasInterns/frontend/src/utils/axios.js"],"names":["axios","clearStore","getUserFromLocalStorage","API_URL","process","env","REACT_APP_API_URL","customFetch","create","baseURL","interceptors","request","use","config","user","headers","common","token","checkForUnauthorizedResponse","error","thunkAPI","response","status","dispatch","rejectWithValue","data","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,uBAAT,QAAwC,gBAAxC;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEA,MAAMC,WAAW,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAEN;AADsB,CAAb,CAApB;AAIAI,WAAW,CAACG,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAsCC,MAAD,IAAY;AAC/C,QAAMC,IAAI,GAAGZ,uBAAuB,EAApC;;AACA,MAAIY,IAAJ,EAAU;AACRD,IAAAA,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsB,eAAtB,IAA0C,UAASF,IAAI,CAACG,KAAM,EAA9D;AACD;;AACD,SAAOJ,MAAP;AACD,CAND;AAQA,OAAO,MAAMK,4BAA4B,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC/D,MAAID,KAAK,CAACE,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;AACjCF,IAAAA,QAAQ,CAACG,QAAT,CAAkBtB,UAAU,EAA5B;AACA,WAAOmB,QAAQ,CAACI,eAAT,CAAyB,8BAAzB,CAAP;AACD;;AACD,SAAOJ,QAAQ,CAACI,eAAT,CAAyBL,KAAK,CAACE,QAAN,CAAeI,IAAf,CAAoBC,GAA7C,CAAP;AACD,CANM;AAQP,eAAenB,WAAf","sourcesContent":["import axios from 'axios';\nimport { clearStore } from '../features/user/userSlice';\nimport { getUserFromLocalStorage } from './localStorage';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst customFetch = axios.create({\n  baseURL: API_URL,\n});\n\ncustomFetch.interceptors.request.use((config) => {\n  const user = getUserFromLocalStorage();\n  if (user) {\n    config.headers.common['Authorization'] = `Bearer ${user.token}`;\n  }\n  return config;\n});\n\nexport const checkForUnauthorizedResponse = (error, thunkAPI) => {\n  if (error.response.status === 401) {\n    thunkAPI.dispatch(clearStore());\n    return thunkAPI.rejectWithValue('Unauthorized! Logging Out...');\n  }\n  return thunkAPI.rejectWithValue(error.response.data.msg);\n};\n\nexport default customFetch;\n"]},"metadata":{},"sourceType":"module"}