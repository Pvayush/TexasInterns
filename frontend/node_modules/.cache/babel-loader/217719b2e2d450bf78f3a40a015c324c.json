{"ast":null,"code":"import axios from'axios';import{clearStore}from'../features/user/userSlice';import{getUserFromLocalStorage}from'./localStorage';var API_URL=process.env.REACT_APP_API_URL;var customFetch=axios.create({baseURL:API_URL});customFetch.interceptors.request.use(function(config){var user=getUserFromLocalStorage();if(user){config.headers.common['Authorization']=\"Bearer \".concat(user.token);}return config;});export var checkForUnauthorizedResponse=function checkForUnauthorizedResponse(error,thunkAPI){if(error.response.status===401){thunkAPI.dispatch(clearStore());return thunkAPI.rejectWithValue('Unauthorized! Logging Out...');}return thunkAPI.rejectWithValue(error.response.data.msg);};export default customFetch;","map":{"version":3,"sources":["C:/Users/pvayu/OneDrive/Documents/Code/TexasInterns/frontend/src/utils/axios.js"],"names":["axios","clearStore","getUserFromLocalStorage","API_URL","process","env","REACT_APP_API_URL","customFetch","create","baseURL","interceptors","request","use","config","user","headers","common","token","checkForUnauthorizedResponse","error","thunkAPI","response","status","dispatch","rejectWithValue","data","msg"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,4BAA3B,CACA,OAASC,uBAAT,KAAwC,gBAAxC,CAEA,GAAMC,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B,CAEA,GAAMC,CAAAA,WAAW,CAAGP,KAAK,CAACQ,MAAN,CAAa,CAC/BC,OAAO,CAAEN,OADsB,CAAb,CAApB,CAIAI,WAAW,CAACG,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAqC,SAACC,MAAD,CAAY,CAC/C,GAAMC,CAAAA,IAAI,CAAGZ,uBAAuB,EAApC,CACA,GAAIY,IAAJ,CAAU,CACRD,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsB,eAAtB,mBAAmDF,IAAI,CAACG,KAAxD,EACD,CACD,MAAOJ,CAAAA,MAAP,CACD,CAND,EAQA,MAAO,IAAMK,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC/D,GAAID,KAAK,CAACE,QAAN,CAAeC,MAAf,GAA0B,GAA9B,CAAmC,CACjCF,QAAQ,CAACG,QAAT,CAAkBtB,UAAU,EAA5B,EACA,MAAOmB,CAAAA,QAAQ,CAACI,eAAT,CAAyB,8BAAzB,CAAP,CACD,CACD,MAAOJ,CAAAA,QAAQ,CAACI,eAAT,CAAyBL,KAAK,CAACE,QAAN,CAAeI,IAAf,CAAoBC,GAA7C,CAAP,CACD,CANM,CAQP,cAAenB,CAAAA,WAAf","sourcesContent":["import axios from 'axios';\nimport { clearStore } from '../features/user/userSlice';\nimport { getUserFromLocalStorage } from './localStorage';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst customFetch = axios.create({\n  baseURL: API_URL,\n});\n\ncustomFetch.interceptors.request.use((config) => {\n  const user = getUserFromLocalStorage();\n  if (user) {\n    config.headers.common['Authorization'] = `Bearer ${user.token}`;\n  }\n  return config;\n});\n\nexport const checkForUnauthorizedResponse = (error, thunkAPI) => {\n  if (error.response.status === 401) {\n    thunkAPI.dispatch(clearStore());\n    return thunkAPI.rejectWithValue('Unauthorized! Logging Out...');\n  }\n  return thunkAPI.rejectWithValue(error.response.data.msg);\n};\n\nexport default customFetch;\n"]},"metadata":{},"sourceType":"module"}