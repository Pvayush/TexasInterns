{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { addUserToLocalStorage, getUserFromLocalStorage, removeUserFromLocalStorage } from '../../utils/localStorage';\nimport { loginUserThunk, registerUserThunk, updateUserThunk, clearStoreThunk } from './userThunk';\nconst initialState = {\n  isLoading: false,\n  isSidebarOpen: false,\n  user: getUserFromLocalStorage()\n};\nexport const registerUser = createAsyncThunk('user/registerUser', async (user, thunkAPI) => {\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_URL}/register`, user);\n    const {\n      token,\n      user: registeredUser\n    } = response.data; // Save user and token to localStorage\n\n    addUserToLocalStorage({ ...registeredUser,\n      token\n    });\n    return { ...registeredUser,\n      token\n    };\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const loginUser = createAsyncThunk('user/loginUser', async (user, thunkAPI) => {\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_URL}/login`, user);\n    const {\n      token,\n      user: loggedInUser\n    } = response.data; // Assuming backend returns { user, token }\n    // Save user and token to localStorage\n\n    addUserToLocalStorage({ ...loggedInUser,\n      token\n    });\n    return { ...loggedInUser,\n      token\n    };\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const updateUser = createAsyncThunk('user/updateUser', async (user, thunkAPI) => {\n  return updateUserThunk('/auth/updateUser', user, thunkAPI);\n});\nexport const clearStore = createAsyncThunk('user/clearStore', clearStoreThunk);\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    toggleSidebar: state => {\n      state.isSidebarOpen = !state.isSidebarOpen;\n    },\n    logoutUser: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.user = null;\n      state.isSidebarOpen = false;\n      removeUserFromLocalStorage();\n\n      if (payload) {\n        toast.success(payload);\n      }\n    },\n    setDemoUser: state => {\n      const demoUser = {\n        name: 'Demo User',\n        email: 'demo@user.com',\n        token: 'demo-token' // Example demo token\n\n      };\n      state.user = demoUser;\n      addUserToLocalStorage(demoUser);\n      toast.success('Logged in as Demo User');\n    }\n  },\n  extraReducers: {\n    [registerUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [registerUser.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.isLoading = false;\n      state.user = payload;\n      toast.success(`Hello There ${payload.name}`);\n    },\n    [registerUser.rejected]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [loginUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [loginUser.fulfilled]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.isLoading = false;\n      state.user = payload;\n      toast.success(`Welcome Back ${payload.name}`);\n    },\n    [loginUser.rejected]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [updateUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [updateUser.fulfilled]: (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      state.isLoading = false;\n      state.user = payload;\n      addUserToLocalStorage(payload);\n      toast.success('User Updated!');\n    },\n    [updateUser.rejected]: (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [clearStore.rejected]: () => {\n      toast.error('There was an error..');\n    }\n  }\n});\nexport const {\n  toggleSidebar,\n  logoutUser,\n  setDemoUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/pvayu/OneDrive/Documents/Code/TexasInterns/frontend/src/features/user/userSlice.js"],"names":["createSlice","createAsyncThunk","toast","axios","addUserToLocalStorage","getUserFromLocalStorage","removeUserFromLocalStorage","loginUserThunk","registerUserThunk","updateUserThunk","clearStoreThunk","initialState","isLoading","isSidebarOpen","user","registerUser","thunkAPI","response","post","process","env","REACT_APP_API_URL","token","registeredUser","data","error","rejectWithValue","loginUser","loggedInUser","updateUser","clearStore","userSlice","name","reducers","toggleSidebar","state","logoutUser","payload","success","setDemoUser","demoUser","email","extraReducers","pending","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport axios from 'axios'; \nimport {\n  addUserToLocalStorage,\n  getUserFromLocalStorage,\n  removeUserFromLocalStorage,\n} from '../../utils/localStorage';\nimport {\n  loginUserThunk,\n  registerUserThunk,\n  updateUserThunk,\n  clearStoreThunk,\n} from './userThunk';\n\nconst initialState = {\n  isLoading: false,\n  isSidebarOpen: false,\n  user: getUserFromLocalStorage(),\n};\n\nexport const registerUser = createAsyncThunk(\n  'user/registerUser',\n  async (user, thunkAPI) => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/register`, user);\n      const { token, user: registeredUser } = response.data; \n      \n      // Save user and token to localStorage\n      addUserToLocalStorage({ ...registeredUser, token });\n      return { ...registeredUser, token };\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const loginUser = createAsyncThunk(\n  'user/loginUser',\n  async (user, thunkAPI) => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/login`, user);\n      const { token, user: loggedInUser } = response.data; // Assuming backend returns { user, token }\n      \n      // Save user and token to localStorage\n      addUserToLocalStorage({ ...loggedInUser, token });\n      return { ...loggedInUser, token };\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const updateUser = createAsyncThunk(\n  'user/updateUser',\n  async (user, thunkAPI) => {\n    return updateUserThunk('/auth/updateUser', user, thunkAPI);\n  }\n);\n\nexport const clearStore = createAsyncThunk('user/clearStore', clearStoreThunk);\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    toggleSidebar: (state) => {\n      state.isSidebarOpen = !state.isSidebarOpen;\n    },\n    logoutUser: (state, { payload }) => {\n      state.user = null;\n      state.isSidebarOpen = false;\n      removeUserFromLocalStorage();\n      if (payload) {\n        toast.success(payload);\n      }\n    },\n    setDemoUser: (state) => {\n      const demoUser = { \n        name: 'Demo User', \n        email: 'demo@user.com',\n        token: 'demo-token'  // Example demo token\n      };  \n      state.user = demoUser;\n      addUserToLocalStorage(demoUser);\n      toast.success('Logged in as Demo User');\n    },\n  },\n  extraReducers: {\n    [registerUser.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [registerUser.fulfilled]: (state, { payload }) => {\n      state.isLoading = false;\n      state.user = payload;\n      toast.success(`Hello There ${payload.name}`);\n    },\n    [registerUser.rejected]: (state, { payload }) => {\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [loginUser.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [loginUser.fulfilled]: (state, { payload }) => {\n      state.isLoading = false;\n      state.user = payload;\n      toast.success(`Welcome Back ${payload.name}`);\n    },\n    [loginUser.rejected]: (state, { payload }) => {\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [updateUser.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [updateUser.fulfilled]: (state, { payload }) => {\n      state.isLoading = false;\n      state.user = payload;\n      addUserToLocalStorage(payload);\n      toast.success('User Updated!');\n    },\n    [updateUser.rejected]: (state, { payload }) => {\n      state.isLoading = false;\n      toast.error(payload);\n    },\n    [clearStore.rejected]: () => {\n      toast.error('There was an error..');\n    },\n  },\n});\n\nexport const { toggleSidebar, logoutUser, setDemoUser } = userSlice.actions;\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}